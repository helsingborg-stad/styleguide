@use "sass:map";
@use "sass:meta";
@use "sass:string";
@use "../mixin/mq";
@use "../setting/var_border-radius";
@use "../setting/var_colors";
@use "../setting/var_default";
@use "../setting/var_properties";
@use "../setting/component/_slider" as *;

/*@import "@splidejs/splide/dist/css/splide.min.css";*/

.c-slider {
    position: relative;
    border-radius: var_border-radius.$border-radius-md;

    .c-slider__container {
        padding-top: Min(100%, 80vh);
        min-height: 0;
        position: relative;
        overflow: hidden;

        .c-slider__inner {
            display: flex;
            height: 100%;

            .c-segment {
                width: 100%;
            }
        }
    }

    &.c-slider--shadow {
        .c-slider__container {
            filter: var_properties.$drop-shadow-2;
        }
    }

    .c-slider__dot {
        cursor: default;
    }

    .c-slider__arrows {
        width: 100%;
        max-width: $c-slider-max-width;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1;

        .c-slider__arrow {
            position: absolute;
            top: 50%;
            z-index: 1;
            width: calc(#{var_default.$base} * 4);
            height: calc(#{var_default.$base} * 4);

             &.c-slider__arrow--prev {
                left: calc(var_default.$base * -1.5);
                transform: translateY(-50%);
            }

            &.c-slider__arrow--next {
                right: calc(var_default.$base * -1.5);
                transform: translateY(-50%);
            }

            @include mq.mq(map.get(var_default.$breakpoints-map, "md")) {
                width: calc(#{var_default.$base} * 6);
                height: calc(#{var_default.$base} * 6);

                &.c-slider__arrow--prev {
                    left: calc(#{var_default.$base} * 2.5);
                }

                &.c-slider__arrow--next {
                    right: calc(#{var_default.$base} * 2.5);
                }
            }
        }
    }

    &__controls {
        max-width: $c-slider-max-width;
        width: 100%;
        display: flex;
        flex-direction: row;
        justify-content: flex-end;
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        pointer-events: none;
        
        @include mq.mq(map.get(var_default.$breakpoints-map, "md")) {
            width: calc(100% - calc(#{$c-slider-inset} + #{$c-slider-gap}));
        }
    }

    &--hero {
        .c-slider__controls {
            top: $c-slider-gap;
        }
    }

    &__autoslide-toggle {
        pointer-events: unset;
        position: relative;
        display: none;
        cursor: pointer;
        width: calc(#{var_default.$base} * 5);
        height: calc(#{var_default.$base} * 5);
        color: var_colors.$color-primary;
        z-index: 1;
        margin: calc(#{var_default.$base} * 1);
        
        @include mq.mq(map.get(var_default.$breakpoints-map, 'md')) {
            margin: calc(#{var_default.$base} * 3);
        }

        .c-slider__autoslide-play {
            display: none;
        }

        &:before {
            content: "";
            display: block;
            background: #fff;
            width: calc(#{var_default.$base} * 3);
            height: calc(#{var_default.$base} * 3);
            border-radius: 50%;
            position: absolute;
            z-index: -1;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
        }
    }

    &[js-slider__autoslide]:hover {
        .c-slider__autoslide-toggle {
            display: block;
        }
    }

    /** Modifiers */
    &--is-paused {
        .c-slider__autoslide-play {
            display: block;
        }
        .c-slider__autoslide-pause {
            display: none;
        }
    }

    &.c-slider--has-stepper {
        margin-bottom: calc(#{var_default.$base} * 6);

        .c-slider__steppers {
            margin-bottom: calc(calc(#{var_default.$base} * 3) * -1);
            transform: translateY(-50%);
        }
    }

    &.c-slider--16-9,
    &.c-slider--4-3,
    &.c-slider--10-3,
    &.c-slider--36-7 {
        .c-slider__container {
            padding-top: 0;

            .c-slider__item__container {
                max-height: unset;
            }
        }
    }

    /** Aspect ratio */
    @each $modifier, $ratio in ("16-9": "16/9", "4-3": "4/3", "10-3": "10/3", "36-7": "36/7") {
        &.c-slider--#{$modifier} .c-slider__item:not(.c-slider__item--post) {
            aspect-ratio: string.unquote($ratio);
        }
    } 

    // Posts as slider
    &.c-slider--post {

        .c-slider__item {
            max-height: unset;
        }

        .c-slider__item__container {
            color: $c-slider-color-overlay-dark;
        }

        .c-slider__shadow {
            .c-slider__container {
                filter: var_properties.$drop-shadow-2;
            }
        }

        .c-card {
            filter: none;
        }

        .c-slider__arrows .splide__arrow.splide__arrow--prev {
            left: calc(var_default.$base * -1);
        }

        .c-slider__arrows .splide__arrow.splide__arrow--next {
            right: calc(var_default.$base * -1);
        }

        .c-slider__item {
            .c-slider__item__container {
                width: 100%;
                position: static;
                // height: 100%;
                grid-template-rows: none;
                background-color: transparent;
            }
        }
    
        .c-slider__container {
            padding-top: 0;
            
            .c-slider__inner {
                position: static;
            }
        }
    }

    &.c-slider--flat {
        .c-slider__item--post {
            .c-slider__item__container {
                background-color: unset;
                color: unset;
            }
        }
    }
}
    
// Stepper
.c-slider__steppers {
    position: absolute;
    bottom: 0;
    display: flex;
    gap: calc(#{var_default.$base} * 0.5);
    justify-content: center;
    width: 100%;
    list-style: none;
    margin: 0;
    padding: 0;

    li {
        margin: 0;
        padding: 0;
    }

    li:first-of-type .c-slider__dot {
        border-top-left-radius: calc(#{var_default.$base} * 0.5);
        border-bottom-left-radius: calc(#{var_default.$base} * 0.5);
    }

    li:last-of-type .c-slider__dot {
        border-top-right-radius: calc(#{var_default.$base} * 0.5);
        border-bottom-right-radius: calc(#{var_default.$base} * 0.5);
    }

    .c-slider__dot {
        cursor: pointer;
        background: var_colors.$color-gray;
        display: block;
        width: calc(#{var_default.$base} * 2);
        height: calc(#{var_default.$base} * 0.5);
        border: none;

        &.c-slider__dot.is-active {
            cursor: default;
            background: var_colors.$color-primary;
        }
    }

}

// Printing
@media print {
    .c-slider {
        display: none;
    }
}

//Import is here as adding the import in main.scss does not work
@include meta.load-css('slider_item');
