$c-modal-border-radius: var(--c-modal-border-radius, $border-radius-md) !default;
$c-modal-backdrop-color: var(--c-modal-backdrop-color, $color-alpha) !default;

.c-modal {
    background-color: white;
    gap: map-get($spacers, "2");
    flex-direction: column;
    width: 100%;
    cursor: default;
    transition: all 0.3s ease-in-out;
    display: none;
    border: none;
    border-radius: $c-modal-border-radius;
    filter: $drop-shadow-3;
    max-width: 800px;
    max-height: 90vh;

    &[data-open] {
        cursor: pointer;
    }

    .c-modal__close.c-button {
        color: $color-black;
    }

    .c-image {
        width: 100%;
        height: auto;

        .c-image__image {

            width: 100%;
            height: auto;
        }
    }

    &.c-modal--gallery {
        max-height: unset;

        .c-image__image {
            max-height: 80vh;
            object-fit: contain;
        }

        .c-modal__header,
        .c-modal__footer {
            padding: 0;
        }

        .c-modal__content {
            line-height: 0;
            padding: 0;
        }
    }

    &.c-modal--transparent {
        background-color: transparent;

        .c-button.c-modal__close {
            color: $color-white;
        }
    }

    &.search-modal {
        #modal-search-form {
            margin-top: calc($base * 1);
            margin-bottom: calc($base * 1);
        }
    }

    input:focus {
        outline: none;
        outline-offset: none;
        box-shadow: none;
    }

    &::backdrop {
        background-color: $c-modal-backdrop-color;
        backdrop-filter: blur(1px);
    }

    &--visible {
        display: flex;
    }

    &--border-radius-sm {
        border-radius: $border-radius-sm;
    }

    &--border-radius-md {
        border-radius: $border-radius-md;
    }

    &--border-radius-lg {
        border-radius: $border-radius-lg;
    }

    &--size-sm {
        max-width: map_get($breakpoints-map, "sm");
    }

    &--size-md {
        max-width: map_get($breakpoints-map, "md");
    }

    &--size-lg {
        max-width: map_get($breakpoints-map, "lg");
    }

    &--is-panel {
        max-width: 100%;
        max-height: 100vh;
        width: 100%;
        height: 100vh;
        border-radius: 0;
    }

    @for $i from 1 through 4 {
        &--padding-#{$i} {
            padding: map-get($spacers, #{$i}) 0;

            >* {
                padding: 0 map-get($spacers, #{$i});
            }

            .c-modal__footer {
                padding-top: map-get($spacers, #{$i});
            }
        }
    }

    &__header {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: flex-start;

        .c-modal__heading {
            margin-right: map-get($spacers, "2");
        }
    }

    &__content {
        overflow-y: auto;
    }

    &__footer {
        flex-shrink: 0;
        border-top: 1px solid $color-gray-light;
    }

    .c-button:hover {
        box-shadow: none;
    }

    .c-modal__close.c-button.c-button--lg,
    .c-modal__close.c-button.c-button--md,
    .c-modal__close.c-button.c-button--sm {
        cursor: pointer;
        height: auto;
        width: auto;
        margin-left: auto;
    }

    &__prev,
    &__next {
        color: $color-white;
    }

    &__prev,
    &__next {
        position: absolute;
        top: calc(50% - 10px);
        /* 50% - 3/4 of icon height */
        vertical-align: middle;
        cursor: pointer;
        z-index: $level-top;
    }

    &__prev {
        left: -#{map-get($spacers, "8")};
    }

    &__next {
        right: #{map-get($spacers, "0")};
    }

    @include mq(map_get($breakpoints-map, "xs"), "lg") {

        &__prev {
            left: map-get($spacers, "0");
        }

        &__next {
            right: map-get($spacers, "0");
        }

        &__prev,
        &__next {
            vertical-align: bottom;
            bottom: #{map-get($spacers, "8")};
        }

    }

    @include mq(map_get($breakpoints-map, "xs"), "sm") {

        &__close,
        &__prev,
        &__next {

            &:hover {
                box-shadow: none;
                filter: $drop-shadow-0;
                background: none;
            }
        }

        &__close {
            top: -#{map-get($spacers, "6")};
            right: map-get($spacers, "1");

            i {
                font-size: map-get($icon-sizes, "md");
            }
        }

        &__prev {
            left: map-get($spacers, "1");
        }

        &__next {
            right: map-get($spacers, "1");
        }

        &__prev,
        &__next {
            bottom: #{map-get($spacers, "6")};

            i {
                font-size: map-get($icon-sizes, "md");
            }

        }

    }

}

.c-modal[open] {
    animation: modalEntrance 300ms ease normal;
}

@keyframes modalEntrance {
    from {
        opacity: 0;
        transform: translateY(50vh);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}
