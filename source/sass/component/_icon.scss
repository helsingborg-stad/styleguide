@charset "utf-8";
$sizes: xs, sm, md, lg, xl, xxl;
$colors: (
    "color-black": $color-black,
    "color-gray": $color-gray,
    "color-default": $color-default,
    "color-default-dark": $color-default-dark,
    "color-white": $color-white,
    "color-primary": $color-primary,
    "color-secondary": $color-secondary
);

.c-icon {
    font-display: block;
    line-height: 1;
    
    &.c-icon--svg-link {
        width: 1em;
        object-fit: contain;
        aspect-ratio: 1;
    }

    &.c-icon--svg-path {
        svg {
            width: auto;

            path {
                stroke: currentColor;
                fill: currentColor;
                stroke-width: 1;
            }
        }
    }

    /* Set baseline to align icon to text */

    &:after {
        vertical-align: 12.5%;
    }

    /* Modifiers  - Sizes */

    &.c-icon--size-inherit {
        font-size: inherit;
    }

    @each $size in $sizes {
        &.c-icon--size-#{$size} {
            font-size: map-get($icon-sizes, $size);
            &::after {
                height: map-get($icon-sizes, $size);
                width: map-get($icon-sizes, $size);
                display: inline-block;
            }
            svg {
                height: map-get($icon-sizes, $size);
            }
        }
    }    

    @each $color, $value in $colors {
        &.c-icon--#{$color} {
            color: $value;
            
            svg path {
                stroke: $value;
                fill: $value;
                stroke-width: 1;
            }
        }
    }

    /* Nested elements */

    .c-icon__label {
        font-size: 1rem;
        font-style: normal;
        color: inherit;
    }

    &.c-icon--fluid-label .c-icon__label {
        font-size: 1rem;
    }

}

@media print {

    .c-icon {
        display: none;
    }

}