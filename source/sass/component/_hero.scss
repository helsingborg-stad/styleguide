$c-hero-color-overlay: var(--c-hero-color-overlay, $color-alpha) !default;
$c-hero-color-font-contrasting: var(--c-hero-color-font-contrasting, $color-alpha-contrasting) !default;
$c-hero-color-font-white: var(--c-hero-color-font-white, $color-white) !default;
$c-hero-color-font-black: var(--c-hero-color-font-black, $color-black) !default;
$c-hero-background-color: var(--c-hero-background-color, $color-black) !default;
$c-hero-content-border-radius: var(--c-hero-content-border-radius, $border-radius-lg) !default;


.c-hero {
  display: flex; 
  position: relative;
  overflow: hidden;

  &:hover {
    .c-hero__controls {
      display: inline-flex;
    }
  }

   &__controls {
      display: none;
      position: absolute;
      top: calc(#{$base} * 1.5);
      right: calc(#{$base} * 1.5);
      cursor: pointer;
      z-index: 3000;

      &:before {
        content: "";
        display: block;
        background: $color-white;
        width: calc(#{$base} * 3);
        height: calc(#{$base} * 3);
        border-radius: 50%;
        position: absolute;
        z-index: -1;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }

      .c-hero__animation-play-button {
        display: none;
        color: $color-primary;
      }
      
      .c-hero__animation-pause-button {
        display: inline-flex;
        color: $color-primary;
      }

      &.is-paused {
        .c-hero__animation-pause-button {
          display: none;
        }

        .c-hero__animation-play-button {
          display: inline-flex;
        }
      }
    }

  &.c-hero--image {
    .c-hero__image {
      background-color: $c-hero-background-color;
      background-size: cover;
      width: 100%;
      height: 100%;
      position: absolute;

      .c-image.c-image--type-svg .c-image__image {
        object-fit: cover; //Override the default object-fit: scale-down;
      }
    }
  }

  &.c-hero--animation-type-kenny {
    .c-hero__image {
      @include ken-burns();
    }

    @media (prefers-reduced-motion: reduce) {
      .c-hero__image {
        animation: none;
      }
    }
  }

  /** Modifiers - size **/ 
  &.c-hero--small {
    min-height: calc(#{$base} * 40);
    &:before {
      @include ratio(36, 7, false); 
    }
  }

  &.c-hero--normal {
    min-height: calc(#{$base} * 50);
    &:before {
      @include ratio(10, 3, false); 
    }
  }

  &.c-hero--large {
    min-height: calc(#{$base} * 60);
    max-height: 70vh;
    &:before {
      @include ratio(16, 9, false);
    }
  }

  &.c-hero--small:before,
  &.c-hero--normal:before,
  &.c-hero--large:before {
    float: left;
    content: "";
    width: 1px;
    margin-left: -1px;
    height: 0;
  }

  &.c-hero--small:before,
  &.c-hero--normal:before,
  &.c-hero--large:after {
    content: "";
    display: table;
    clear: both;
  }

  /** Modifiers - Full width */ 
  &.c-hero--stretch { /* Bleed outside container  left&right */ 
    @include stretch();
  }

  /** Sub elements */ 
  &.c-hero--overlay .c-hero__overlay {
    @include cover();
    z-index: $level-1;
    box-shadow: inset 0 0 20vh rgba(0, 0, 0, .2); 
  }

  .c-hero__container {
    align-self: flex-end;
  }

  @include mq(map_get($breakpoints-map, "md")) {

    .c-hero__container {
      align-self: flex-end;
      display: flex;
    }

    &.c-hero--content-horizontal__center .c-hero__container {
      justify-content: center;
    }

    &.c-hero--content-horizontal__right .c-hero__container {
      justify-content: flex-end;
    }
    
    &.c-hero--content-vertical__top .c-hero__container {
      align-self: flex-start;
    }

    &.c-hero--content-vertical__center .c-hero__container {
      align-self: center;
    }

    &.c-hero--text-align__center .c-hero__container {
      text-align: center;
    }

    &.c-hero--text-align__right .c-hero__container {
      text-align: right;
    }

  }

  .c-hero__content {
    padding: map-get($spacers, "6") 0;
    max-width: calc( #{$base} * 87);
    z-index: $level-2;
    position: relative;
  }
  
  &.c-hero--overlay .c-hero__content {
    text-shadow: 0 0 .8rem rgba(0, 0, 0, .4);
  }

  &.c-hero--has-content-background-color {
    .c-hero__content {
      margin: calc(var(--base, 8px)*3) 0;
      padding: map-get($spacers, "6");
    }

    &.c-hero--apply-rounded-corners .c-hero__content {
      border-radius: $c-hero-content-border-radius;
    }

    &.c-hero--apply-shadows .c-hero__content {
      filter: $drop-shadow-2;
    }
  }

  .c-hero__content--link {
    text-decoration: none;
  }

  .c-hero__title,
    .c-hero__byline,
    .c-hero__meta,
    .c-hero__body {
      animation: hero-slide-in 1s cubic-bezier(0.230, 1.000, 0.320, 1.000) both;
  }

  &.c-hero--overlay {
    .c-hero__title,
    .c-hero__byline,
    .c-hero__meta,
    .c-hero__body {
      color: $c-hero-color-font-contrasting;
    }
  }
  
  &.c-hero--color-black {
    .c-hero__title,
    .c-hero__byline,
    .c-hero__meta,
    .c-hero__body {
      color: $c-hero-color-font-black;
    }
  }

  &.c-hero--color-white {
    .c-hero__title,
    .c-hero__byline,
    .c-hero__meta,
    .c-hero__body {
      color: $c-hero-color-font-white;
    }
  }

  .c-hero__meta {
    animation-delay: 200ms;
  }

  .c-hero__title {
    font-size: calc(#{$font-size-hero} + calc(1vw));
    text-wrap: balance;
    animation-delay: 200ms;
  }

  .c-hero__byline {
    font-size: calc(#{$font-size-hero-byline} + calc(.5vw));
    animation-delay: 400ms;
    display: inline-block;
  }

  .c-hero__body {
    font-size: calc(#{$font-size-hero-body} + calc(.2vw));
    animation-delay: 600ms;
  }

  .c-hero__title + .c-hero__body {
    animation-delay: 400ms;
  }

  .c-hero__overlay {
    background-color: $c-hero-color-overlay;
  }

  .c-hero__video {
    @include cover();
    object-fit: cover;
    width: 100%;
    height: 100%;
  }

  /* Meta */
  &.c-hero--meta {
    .c-hero__content .c-hero__title {    
        margin-top: 0;
    }
  }



  /* TwoColumn hero */
  &.c-hero--twoColumn {
    padding: calc($base*10) 0;
    
    &:before {
      display: none;
    }

    .c-hero__image-container {
      aspect-ratio: 16 / 9;
      border-radius: $border-radius-md;
      contain: paint;
    }
    
    .c-hero__group-image,
    .c-image__image {
      border-radius: inherit;
    }
    
    .c-hero__background {
      height: 100%;
      width: 100%;
      z-index: -1;
      object-fit: cover;
      position: absolute;
      top:0;
      background-repeat: no-repeat;
      background-size: cover;
    }

    .c-hero__content {
      max-width:100%;
      padding:0;
      text-shadow: none;
      border-radius: $border-radius-xs;
      .c-hero__group {
        flex: 0 0 100%;
      }
      .c-hero__group-content {
          padding: 0;
          height: 100%;
      }
    }

    &.c-hero--overflow {
      padding: 0;

        .c-hero__background {
          display:none;
        }

        .c-hero__group-image {
          height: 100%;
          img {
            border-radius: unset;
            height: 100%;
            max-width: 100%;
            object-fit: cover;
          }
        }
        .c-hero__group-content {
          height: 100%;
        }
    }

    @include mq(map_get($breakpoints-map, "md")) {
      .c-hero__content {
        .c-hero__group {
          flex: 0 0 calc(50% - calc(var(--o-grid-gap, 4) * var(--base, 8px)) * 0.5);
        } 
      }
      
      &.c-hero--overflow { 
        padding-top: calc($base * 16);
        max-height: calc($base * 90);
        
        .c-hero__background {
          display: block;
          top:0;
          filter: blur(30px);
        }

        &::after {
          content: "";
          height: calc($base * 8);
          width: 100%;
          bottom:0;
          left:0;
          position: absolute;
          background-color: $color-default;
          z-index:$level-1;
        }

      .c-hero__content {
          background-color: $color-white;
        .c-hero__group-content {
          padding: calc($base * 6);
        } 
      }
    }
    }
  }

  /* Call to action hero */
  &.c-hero--callToActions {
    color: var(--color-primary, black);

    .c-hero__text {
      padding: calc(#{$base} * 5) calc(#{$base} * 3);

      & > .o-grid {
        max-width: var(--container-width, 100%);
        margin: auto;
      }

      p {
        margin: -0.5em 0 calc(#{$base} * 6) 0;
      }
    }

    .c-hero__media {
      overflow: hidden;
      position: relative;
    }

    &.c-hero--media-first {
      .c-hero__media {
        order: 1;
      }
      .c-hero__text {
        order: 2;
      }
    }

    &.c-hero--normal {
      min-height: unset;
      max-height: none;
      .c-hero__media {
        aspect-ratio: 1.5/1;
      }
    }

    &.c-hero--small {
      min-height: unset;
      max-height: none;
      .c-hero__media {
        aspect-ratio: 2/1;
      }
    }

    &.c-hero--large {
      min-height: unset;
      max-height: none;
      .c-hero__media {
        aspect-ratio: 1/1;
      }
    }

    .c-hero__buttons {
      display: flex;
      flex-flow: column;
      margin-top: calc(#{$base} * 3);
      gap: calc(#{$base} * 2);

      .c-button + .c-button {
        margin-left: 0;
      }
    }

    @include mq(map_get($breakpoints-map, "sm")) {
      .c-hero__text {
        padding: calc(#{$base} * 6) calc(#{$base} * 3);

        p {
          margin: 0;
        }
      }
    }

    @include mq(map_get($breakpoints-map, "md")) {
      .c-hero__text {
        padding: calc(#{$base} * 8) calc(#{$base} * 3);
      }

      .c-hero__buttons {
        flex-flow: row;
      }

      &.c-hero--normal {
        .c-hero__media {
          aspect-ratio: 3/1;
        }
      }

      &.c-hero--small {
        .c-hero__media {
          aspect-ratio: 4/1;
        }
      }

      &.c-hero--large {
        .c-hero__media {
          aspect-ratio: 16/9;
        }
      }
    }

    @include mq(map_get($breakpoints-map, "lg")) {
      .c-hero__text {
        padding: calc(#{$base} * 10) calc(#{$base} * 3);
      }
    }
  }
}


@keyframes hero-slide-in {
  0% {
    transform: translateY(calc(#{$base} * 4));
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}