$c-hero-color-overlay: var(--c-hero-color-overlay, $color-alpha) !default;
$c-hero-color-font-contrasting: var(--c-hero-color-font-contrasting, $color-alpha-contrasting) !default;
$c-hero-color-font-white: var(--c-hero-color-font-white, $color-white) !default;
$c-hero-color-font-black: var(--c-hero-color-font-black, $color-black) !default;
$c-hero-background-color: var(--c-hero-background-color, $color-black) !default;


.c-hero {
  display: flex; 
  position: relative;
  overflow: hidden;

  &:hover {
    .c-hero__controls {
      display:block;
    }
  }

   &__controls {
      display: none;
      position: absolute;
      top: calc(#{$base} * 1.5);
      right: calc(#{$base} * 1.5);
      cursor: pointer;
      z-index: 3000;

      &:before {
        content: "";
        display: block;
        background: $color-white;
        width: calc(#{$base} * 3);
        height: calc(#{$base} * 3);
        border-radius: 50%;
        position: absolute;
        z-index: -1;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }

      .c-hero__animation-play-button {
        display: none;
        color: $color-primary;
      }
      
      .c-hero__animation-pause-button {
        display: block;
        color: $color-primary;
      }

      &.is-paused {
        .c-hero__animation-pause-button {
          display: none;
        }

        .c-hero__animation-play-button {
          display: block;
        }
      }
    }

  &.c-hero--image {
    .c-hero__image {
      background-color: $c-hero-background-color;
      background-size: cover;
      width: 100%;
      height: 100%;
      position: absolute;
      z-index: -1;
    }
  }

  &.c-hero--animation-type-kenny {
    .c-hero__image {
      @include ken-burns();
    }
  }

  /** Modifiers - size **/ 
  &.c-hero--small {
    min-height: calc(#{$base} * 40);
    &:before {
      @include ratio(36, 7, false); 
    }
  }

  &.c-hero--normal {
    min-height: calc(#{$base} * 50);
    &:before {
      @include ratio(10, 3, false); 
    }
  }

  &.c-hero--large {
    min-height: calc(#{$base} * 60);
    max-height: 70vh;
    &:before {
      @include ratio(16, 9, false);
    }
  }

  &.c-hero--small:before,
  &.c-hero--normal:before,
  &.c-hero--large:before {
    float: left;
    content: "";
    width: 1px;
    margin-left: -1px;
    height: 0;
  }

  &.c-hero--small:before,
  &.c-hero--normal:before,
  &.c-hero--large:after {
    content: "";
    display: table;
    clear: both;
  }

  /** Modifiers - Full width */ 
  &.c-hero--stretch { /* Bleed outside container  left&right */ 
    @include stretch();
  }

  /** Sub elements */ 
  &.c-hero--overlay .c-hero__overlay {
    @include cover();
    z-index: $level-1;
    box-shadow: inset 0 0 20vh rgba(0, 0, 0, .2); 
  }

  .c-hero__container {
    align-self: flex-end;
  }

  .c-hero__content {
    padding: map-get($spacers, "6") 0;
    max-width: calc( #{$base} * 87);
    z-index: $level-2;
    position: relative;
    text-shadow: 0 0 .8rem rgba(0, 0, 0, .4);
  }

  &.c-hero--has-content-background-color .c-hero__content {
    margin: calc(var(--base, 8px)*3) 0;
    padding: map-get($spacers, "6");
  }


  .c-hero__title,
    .c-hero__byline,
    .c-hero__meta,
    .c-hero__body {
      animation: hero-slide-in 1s cubic-bezier(0.230, 1.000, 0.320, 1.000) both;
  }

  .c-hero__title,
  .c-hero__byline,
  .c-hero__meta,
  .c-hero__body {
    color: $c-hero-color-font-contrasting;
  }
  
  &.c-hero--color-black {
    .c-hero__title,
    .c-hero__byline,
    .c-hero__meta,
    .c-hero__body {
      color: $c-hero-color-font-black;
    }
  }

  &.c-hero--color-white {
    .c-hero__title,
    .c-hero__byline,
    .c-hero__meta,
    .c-hero__body {
      color: $c-hero-color-font-white;
    }
  }

  .c-hero__meta {
    animation-delay: 200ms;
  }

  .c-hero__title {
    font-size: calc(#{$font-size-hero} + calc(1vw));
    animation-delay: 200ms;
  }

  .c-hero__byline {
    font-size: calc(#{$font-size-hero-byline} + calc(.5vw));
    animation-delay: 400ms;
    display: inline-block;
  }

  .c-hero__body {
    font-size: calc(#{$font-size-hero-body} + calc(.2vw));
    animation-delay: 600ms;
  }

  .c-hero__title + .c-hero__body {
    animation-delay: 400ms;
  }

  .c-hero__overlay {
    background-color: $c-hero-color-overlay;
  }

  .c-hero__video {
    @include cover();
    object-fit: cover;
    z-index: -1;
    width: 100%;
    height: 100%;
  }

  /* Meta */
  &.c-hero--meta {
    .c-hero__content .c-hero__title {    
        margin-top: 0;
    }
  }



  /* TwoColumn hero */
  &.c-hero--twoColumn {
    padding: calc($base*10) 0;
    
    &:before {
      display: none;
    }
    
    .c-hero__group-image {
        img {
          border-radius: $border-radius-md;
          height: auto;
          width: 100%;
          max-width: 100%;
          object-fit: cover;
        }
      }

      .c-hero__background {
        height: 100%;
        width: 100%;
        z-index: -1;
        object-fit: cover;
        position: absolute;
        top:0;
        background-repeat: no-repeat;
        background-size: cover;
      }

      .c-hero__content {
        max-width:100%;
        padding:0;
        text-shadow: none;
        border-radius: $border-radius-xs;
        .c-hero__group {
          flex: 0 0 100%;
        }
        .c-hero__group-content {
            padding: 0;
            height: 100%;
        }
      }

      &.c-hero--overflow {
        padding: 0;

          .c-hero__background {
            display:none;
          }

          .c-hero__group-image {
            height: 100%;
            img {
              border-radius: unset;
              height: 100%;
              max-width: 100%;
              object-fit: cover;
            }
          }
          .c-hero__group-content {
            height: 100%;
          }
      }

    @include mq(map_get($breakpoints-map, "md")) {
      .c-hero__content {
        .c-hero__group {
          flex: 0 0 calc(50% - calc(var(--o-grid-gap, 4) * var(--base, 8px)) * 0.5);
        } 
      }
      
      &.c-hero--overflow { 
        padding-top: calc($base * 16);
        max-height: calc($base * 90);
        
        .c-hero__background {
          display: block;
          top:0;
          filter: blur(30px);
        }

        &::after {
          content: "";
          height: calc($base * 8);
          width: 100%;
          bottom:0;
          left:0;
          position: absolute;
          background-color: $color-default;
          z-index:$level-1;
        }

      .c-hero__content {
          background-color: $color-white;
        .c-hero__group-content {
          padding: calc($base * 6);
        } 
      }
    }
    }
  }
}


@keyframes hero-slide-in {
  0% {
    transform: translateY(calc(#{$base} * 4));
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}