// ***************************************************************
// *** Mapping for different sizes
// ***************************************************************
$radius: (
    (
        "name": "",
        "size": $border-radius-md
    ),
    (
        "name": &--rounded-xs,
        "size": $border-radius-xs
    ),
    (
        "name": &--rounded-sm,
        "size": $border-radius-sm
    ),
    (
        "name": &--rounded-md,
        "size": $border-radius-md
    ),
    (
        "name": &--rounded-lg,
        "size": $border-radius-lg
    )
);

// ***************************************************************
// *** Placeholder
// ***************************************************************

.c-image--is-placeholder {
    @include ratio(16,9, true); 
    position: relative;
    line-height: 0; 
    border: 1px solid $color-image-placeholder-border; 
    background-color: $color-image-placeholder-background; 
    user-select: none;
}

.c-image__placeholder {
    @include cover();
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;

    @include mq(map_get($breakpoints-map, "sm")) {
        flex-direction: row;
    }

    .c-icon {
        color: $color-image-placeholder-icon; 
    }

    .c-image__placeholder-text {
        color: $color-image-placeholder-label; 
        font-weight: bold;
    }

    .c-icon +.c-image__placeholder-text {
        margin-top: map-get($spacers, "2");

        @include mq(map_get($breakpoints-map, "sm")) {
            margin-left: map-get($spacers, "1");
            margin-top: 0;
        }
    }
}

// ***************************************************************
// *** Image
// ***************************************************************

.c-image {

    margin: 0px;
    width: 100%;
    height: auto;

    &--custom-width {
        width:auto;
    }

    &__image {
        border-radius: $border-radius-xs;
        width: 100%;
        max-width: 100%;
        display: block;
    }

    &__caption {
        font-size: 0.8em;
        color: darken($color-gray, 20%);
    }

    &--full-width &__image {
        object-fit: contain;
        width: 100%;
    }

    &__modal {
        cursor:pointer;
    }

    .c-modal--gallery &__caption {

        margin: 0 auto;
        position: absolute;
        bottom: - map-get($spacers, "8");
        color: $color-white;
        left: 50%;
        margin-right: -50%;
        transform: translate(-50%, -50%);

        @include mq(map_get($breakpoints-map, "xs"), "sm") {
            bottom: - map-get($spacers, "8");
            word-break: break-word;
        }
    }

    // Rounded Images with different sizes
    @each $map in $radius {

        $radiusName: map-get($map, "name");
        $radiusSize: map-get($map, "size");

        &#{$radiusName}.c-image--rounded img {
            border-radius: #{$radiusSize};
        }

        &#{$radiusName}.c-image--rounded-top-left img {
            border-radius: #{$radiusSize} 0 0 0;
        }

        &#{$radiusName}.c-image--rounded-top-right img {
            border-radius: 0 #{$radiusSize} 0 0;
        }

        &#{$radiusName}.c-image--rounded-bottom-left img {
            border-radius: 0 0 #{$radiusSize} 0;
        }

        &#{$radiusName}.c-image--rounded-bottom-right img {
            border-radius: 0 0 0 #{$radiusSize};
        }

        &#{$radiusName}.c-image--rounded-top-left.c-image--rounded-top-right img {
            border-radius: #{$radiusSize} #{$radiusSize} 0 0;
        }

        &#{$radiusName}.c-image--rounded-bottom-left.c-image--rounded-bottom-right img {
            border-radius: 0 0 #{$radiusSize} #{$radiusSize};
        }

        &#{$radiusName}.c-image--rounded-top-left.c-image--rounded-bottom-left img {
            border-radius: #{$radiusSize} 0 0 #{$radiusSize};
        }

        &#{$radiusName}.c-image--rounded-top-left.c-image--rounded-bottom-right img {
            border-radius: #{$radiusSize} 0 #{$radiusSize} 0;
        }

        &#{$radiusName}.c-image--rounded-top-right.c-image--rounded-bottom-right img {
            border-radius: 0 0 #{$radiusSize} #{$radiusSize};
        }

        &#{$radiusName}.c-image--rounded-top-right.c-image--rounded-bottom-left img {
            border-radius: #{$radiusSize} 0 0 #{$radiusSize};
        }
    }
}
