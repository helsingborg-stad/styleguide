.c-navbar {
    position: relative;
    display: grid;
    align-items: center;
    grid-template-columns: max-content auto max-content;
    grid-template-rows: 132px max-content;
    grid-template-areas:
        "logo links toggleexpand"
        "content content content"
    ;
    width: 100%;
    background-color: $color-white;
    color: $color-black;
    border-top: 8px solid $color-nav-top-accent;
    z-index: $level-6;
    @include shadow(1);

    &__logo {
        grid-area: logo;
        padding: map-get($spacers, "5");

        .c-image {
            width: unset;
        }

        img {
            height: 55px;
            max-height: 55px;
            width: auto;
        }
    }

    &__list {
        padding: map-get($spacers, "5");
        padding-right: 0;
        grid-area: links;
    }

    &__expand {
        padding: map-get($spacers, "5");
        grid-area: toggleexpand;
    }

    &__item {

        span {
            font-size: 18px;
            color: #000000;
        }
    }

    .c-icon__label {
        display: none;
    }

    a {
        text-decoration-style: unset;
        text-decoration: none;
        text-transform: capitalize;
    }
}

.c-navbar__content {
    height: 0;
    grid-area: content;
    overflow: hidden;
    width: 100%;
    background-color: $color-default;
    z-index: $level-6 - 1;
}

.c-navbar__expanded_menu {

    .c-link,
    .c-link:active,
    .c-link:visited {
        color: $color-darkest;
        font-weight: 700;
    }

    .c-link:hover {
        color: $color-black
    }

    padding: map-get($spacers, "4") map-get($spacers, "11");
}

.c-navbar__expanded_main {
    padding: map-get($spacers, "7") $base * 20;
    border-bottom: 2px solid $color-primary;

}

.c-navbar__expanded_grid {

    a {
        color: $color-darker;

        &:active,
        &:hover {
            color: $color-black;
            cursor: pointer;
        }
    }
}

.c-navbar__title {
    font-weight: 700;
    font-size: 24px;
}

.c-navbar__prev {
    font-size: 18px;
    position: relative;
    left: -20px;
}

.c-navbar__expand {

    .c-button {
        padding: unset;

        &:hover,
        &:focus,
        &:active {
            background-color: unset;
        }
    }
}

@include mq(map_get($breakpoints-map, "xs"), "md") {

    .c-navbar {
        grid-template-columns: 1fr auto 1fr;
        grid-template-rows: 132px max-content;
        grid-template-areas:
            "togglesidebar logo toggleexpand"
            "content content content"
        ;
        text-align: center;
    }

    .c-navbar__list {
        display: none;
    }

    .c-navbar__logo {
        display: flex;
        justify-content: center;
        flex:1;
        padding: 0;

        .c-image {
            width: auto;
        }
    }

    .c-navbar__expand {
        padding: 0;
    }

    .c-navbar__expanded_menu.c-grid__container {
        display: none;
    }

    .c-navbar__content {
        text-align: start;
    }

    .c-navbar__expanded_main {
        padding: map-get($spacers , "4")
    }

    .c-navbar__expanded_grid {
        grid-row-gap: $base * 2 !important;
    }
}

@include mq(map_get($breakpoints-map, "md")) {

    .c-navbar {

        &__list {
            display: inline-flex;
            justify-content: flex-end;

            a {
                min-width: 44px;
                min-height: 44px;
                display: table;
                margin: 0 map-get($spacers, "2");
            }
        }

        &__toggle {
            display: none
        }

        &__item {
            position: relative;
            white-space: nowrap;
            display: table-cell;
            vertical-align: middle;

            &:after {
                display:block;
                content: "";
                width: 24px;
                height: 2px;
                background-color: $color-nav-active-accent;
                transform: scaleX(0);
                transition: transform 250ms ease-in-out;
            }

            &:hover,
            &:active,
            &[item-active="true"] {

                &:after {
                    transform: scaleX(1);
                }
            }

        }
    }
}