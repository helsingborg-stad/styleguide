@use "sass:map";
@use "../mixin/mq";
@use "../setting/var_colors";
@use "../setting/var_default";
@use "../setting/var_fonts";
@use "../setting/var_properties";

.c-navbar {
    position: relative;
    display: grid;
    align-items: center;
    grid-template-columns: max-content auto max-content;
    grid-template-rows: 132px max-content;
    grid-template-areas:
        "logo links toggleexpand"
        "content content content"
    ;
    width: 100%;
    background-color: var_colors.$color-white;
    color: var_colors.$color-black;
    
    z-index: var_properties.$level-6;
    filter: var_properties.$drop-shadow-1;

    &--border-top{
        border-top: var_default.$base solid var_colors.$color-nav-top-accent;
    }
    &--border-bottom{
        border-bottom: var_default.$base solid var_colors.$color-nav-top-accent;
    }

    &__logo {
        grid-area: logo;
        padding: map.get(var_default.$spacers, "5");

        .c-image {
            width: unset;
        }

        img {
            height: 55px;
            max-height: 55px;
            width: auto;
        }
    }

    &__list {
        padding: map.get(var_default.$spacers, "5");
        padding-right: 0;
        grid-area: links;
    }

    &__list  {
        a:hover .c-navbar__item:after,
        a:active .c-navbar__item:after,
        a[item-active="1"] .c-navbar__item:after,
        a[item-ancestor="1"] .c-navbar__item:after {
            transform: scaleX(1);
        }
    }

    &__expand {
        padding: map.get(var_default.$spacers, "5");
        grid-area: toggleexpand;
    }

    &__item {

        span {
            font-size: 18px;
            color: #000000;
        }

        &:after {
            display:block;
            content: "";
            width: 24px;
            height: 2px;
            background-color: var_colors.$color-nav-active-accent;
            transform: scaleX(0);
            transition: transform 250ms ease-in-out;
        }
    }

    .c-icon__label {
        display: none;
    }

    a {
        text-decoration-style: unset;
        text-decoration: none;
        text-transform: capitalize;
    }
}

.c-navbar__content {
    height: 0;
    grid-area: content;
    overflow: hidden;
    width: 100%;
    background-color: var_colors.$color-default;
    z-index: var_properties.$level-6 - 1;
}

.c-navbar__expanded_menu {

    .c-link,
    .c-link:active,
    .c-link:visited {
        color: var_colors.$color-darkest;
        font-family: var_fonts.$font-family-bold;
        font-weight: var_fonts.$font-weight-bold;
    }

    .c-link:hover {
        color: var_colors.$color-black
    }

    padding: map.get(var_default.$spacers, "4") map.get(var_default.$spacers, "11");
}

.c-navbar__expanded_main {
    padding: map.get(var_default.$spacers, "7") calc(#{var_default.$base} * 20);
    border-bottom: 2px solid var_colors.$color-primary;

}

.c-navbar__expanded_grid {

    a {
        color: var_colors.$color-darker;

        &:active,
        &:hover {
            color: var_colors.$color-black;
            cursor: pointer;
        }
    }
}

.c-navbar__title {
    font-weight: 700;
    font-size: 24px;
}

.c-navbar__prev {
    font-size: 18px;
    position: relative;
    left: -20px;
}

.c-navbar__expand {

    .c-button {
        padding: unset;

        &:hover,
        &:focus,
        &:active {
            background-color: unset;
        }
    }
}

.c-navbar__toggle {
    * {
        cursor: pointer;
    }
}

@include mq.mq(map.get(var_default.$breakpoints-map, "xs"), "md") {

    .c-navbar {
        grid-template-columns: 1fr auto 1fr;
        grid-template-rows: 132px max-content;
        grid-template-areas:
            "togglesidebar logo toggleexpand"
            "content content content"
        ;
        text-align: center;
    }

    .c-navbar__list {
        display: none;
    }

    .c-navbar__logo {
        display: flex;
        justify-content: center;
        flex:1;
        padding: 0;

        .c-image {
            width: auto;
        }
    }

    .c-navbar__expand {
        padding: 0;
    }

    .c-navbar__expanded_menu.c-grid__container {
        display: none;
    }

    .c-navbar__content {
        text-align: start;
    }

    .c-navbar__expanded_main {
        padding: map.get(var_default.$spacers , "4")
    }

    .c-navbar__expanded_grid {
        grid-row-gap: calc(#{var_default.$base} * 2) !important;
    }
}

@include mq.mq(map.get(var_default.$breakpoints-map, "md")) {

    .c-navbar {

        &__list {
            display: inline-flex;
            justify-content: flex-end;

            a {
                min-width: 44px;
                min-height: 44px;
                display: table;
                margin: 0 map.get(var_default.$spacers, "2");
            }
        }

        &__toggle {
            display: none
        }

        &__item {
            position: relative;
            white-space: nowrap;
            display: table-cell;
            vertical-align: middle;
        }
    }
}