@use "sass:list";
@use "sass:map";
@use "../component/icon";
@use "../setting/var_colors";
@use "../mixin/build-utility";

$colors: (
    primary: var_colors.$color-primary,
    secondary: var_colors.$color-secondary,
    success: var_colors.$color-success,
    danger: var_colors.$color-danger,
    info: var_colors.$color-info,
    warning: var_colors.$color-warning,
);

$border-widths: (
    0: 0,
    1: 1px,
    2: 2px
);

$border-width-default: 1px;

$sides: (top, left, right, bottom);

$spacing-util: (
    (
        name: "border",
        default: (border: #{$border-width-default} solid #{var_colors.$color_primary}),
        modifiers: (
            0: (border:  #{map.get($border_widths, 0)} solid #{var_colors.$color_primary}),
            1: (border:  #{map.get($border_widths, 1)} solid #{var_colors.$color_primary}),
            2: (border:  #{map.get($border_widths, 2)} solid #{var_colors.$color_primary})
        )
    ),
    (
        name: "border__color",
        default: (border-color: #{var_colors.$color_primary}),
        modifiers: (
            primary: (border-color:  #{var_colors.$color_primary}),
            secondary: (border-color: #{var_colors.$color_secondary}),
            success: (border-color:  #{var_colors.$color_success}),
            danger: (border-color:  #{var_colors.$color_danger}),
            info: (border-color:  #{var_colors.$color_info}),
            warning: (border-color:  #{var_colors.$color_warning})
        )
    )
);

@each $side in $sides {
    $mods: ();

    @each $width_name, $width in $border-widths {
        $style: (#{$width_name}:(border-#{$side}: #{$width} solid #{var_colors.$color-primary}));
        $mods: map.merge($mods, $style);
    }

    $util: (
        name: "border__#{$side}",
        default: (border-#{$side}: 1px solid #{var_colors.$color-primary}),
        modifiers: $mods
    );

    $spacing-util: list.append($spacing-util, $util);
}

@include build-utility.build-utilities($spacing-util);